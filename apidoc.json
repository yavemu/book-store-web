{
  "openapi": "3.0.0",
  "paths": {
    "/api/health": {
      "get": {
        "description": "Verifica el estado de salud de la API y devuelve información del sistema.",
        "operationId": "AppController_getHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "example": "2024-01-01T00:00:00.000Z"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 123.456
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Health check endpoint - Acceso: Público",
        "tags": [
          "Health Check"
        ]
      }
    },
    "/api/audit": {
      "get": {
        "description": "Obtiene una lista paginada de todos los registros de auditoría del sistema. Solo accesible para administradores.",
        "operationId": "AuditController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registros de auditoría obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuditLogListResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtener registros de auditoría - Acceso: ADMIN",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/api/audit/{id}": {
      "get": {
        "description": "Obtiene los detalles específicos de un log de auditoría mediante su ID único.",
        "operationId": "AuditController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del log de auditoría",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Log de auditoría encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "entityId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "entityType": {
                      "type": "string"
                    },
                    "action": {
                      "type": "string"
                    },
                    "changes": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          },
          "404": {
            "description": "Log de auditoría no encontrado"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener log de auditoría por ID - Acceso: ADMIN",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/api/audit/search": {
      "post": {
        "description": "Busca registros de auditoría por término en el campo de detalles. Solo accesible para administradores.",
        "operationId": "AuditController_exactSearch",
        "parameters": [
          {
            "name": "term",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para filtrar por detalles de auditoría",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditExactSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultados de búsqueda de auditoría obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuditLogListResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Buscar registros de auditoría - Acceso: ADMIN",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/api/audit/filter": {
      "post": {
        "description": "Búsqueda optimizada para filtrado en tiempo real de logs de auditoría con debounce y paginación. Mínimo 3 caracteres requeridos. - Acceso: Solo administradores.",
        "operationId": "AuditController_simpleFilter",
        "parameters": [
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para filtrar auditorías (mínimo 3 caracteres)",
            "schema": {
              "example": "usuario",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Límite de resultados por página (máximo 50)",
            "schema": {
              "example": 20,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditSimpleFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lista paginada de registros de auditoría filtrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "uuid-123"
                          },
                          "action": {
                            "type": "string",
                            "example": "CREATE"
                          },
                          "entityType": {
                            "type": "string",
                            "example": "User"
                          },
                          "entityId": {
                            "type": "string",
                            "example": "user-uuid-456"
                          },
                          "performedBy": {
                            "type": "string",
                            "example": "admin-uuid-789"
                          },
                          "details": {
                            "type": "string",
                            "example": "Usuario creado exitosamente"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 150
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 20
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 8
                        },
                        "hasNext": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPrev": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación - término de búsqueda muy corto",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Filter term must be at least 3 characters long"
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT requerido"
          },
          "403": {
            "description": "Prohibido - Solo administradores pueden acceder a logs de auditoría"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar registros de auditoría en tiempo real - Acceso: ADMIN",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/api/audit/advanced-filter": {
      "post": {
        "description": "Aplica filtros avanzados sobre los logs de auditoría del sistema con múltiples criterios.",
        "operationId": "AuditController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado avanzado para logs de auditoría",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID del usuario"
                  },
                  "entityType": {
                    "type": "string",
                    "description": "Tipo de entidad"
                  },
                  "action": {
                    "type": "string",
                    "description": "Acción realizada"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de fin"
                  },
                  "pagination": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "number",
                        "minimum": 1
                      },
                      "limit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 100
                      },
                      "sortBy": {
                        "type": "string",
                        "default": "timestamp"
                      },
                      "sortOrder": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "default": "DESC"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logs de auditoría filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "userId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "entityId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "entityType": {
                            "type": "string"
                          },
                          "action": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtro avanzado de logs de auditoría - Acceso: ADMIN",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/api/audit/export/csv": {
      "get": {
        "description": "Exporta los registros de auditoría filtrados a formato CSV con soporte para rango de fechas. ACCESO: Solo administradores.",
        "operationId": "AuditController_exportToCsv",
        "parameters": [
          {
            "name": "performedBy",
            "required": false,
            "in": "query",
            "description": "Filtrar por usuario que realizó la acción",
            "schema": {
              "example": "admin-uuid-456",
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": false,
            "in": "query",
            "description": "Filtrar por ID de entidad específica",
            "schema": {
              "example": "user-uuid-123",
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "required": false,
            "in": "query",
            "description": "Filtrar por tipo de entidad",
            "schema": {
              "example": "User",
              "type": "string"
            }
          },
          {
            "name": "action",
            "required": false,
            "in": "query",
            "description": "Filtrar por tipo de acción",
            "schema": {
              "enum": [
                "CREATE",
                "UPDATE",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "name": "details",
            "required": false,
            "in": "query",
            "description": "Filter by details content",
            "schema": {
              "example": "created",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Fecha inicial para filtro de rango de fechas",
            "schema": {
              "format": "date-time",
              "example": "2024-01-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Fecha final para filtro de rango de fechas",
            "schema": {
              "format": "date-time",
              "example": "2024-12-31T23:59:59Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV con datos de auditoría filtrados",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT requerido"
          },
          "403": {
            "description": "Prohibido - Solo administradores pueden exportar auditorías"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar auditoría a CSV (Solo Administradores) - Acceso: ADMIN",
        "tags": [
          "Audit Logs"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Autentica al usuario con credenciales y devuelve un token JWT para acceso a endpoints protegidos.",
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inválidas - Email no registrado o contraseña incorrecta",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "summary": "Iniciar sesión de usuario - Acceso: Público",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "description": "Crea una nueva cuenta de usuario en el sistema con validación de datos y encriptación de contraseña.",
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto en registro - El email o nombre de usuario ya están registrados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "summary": "Registrar nuevo usuario - Acceso: Público",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "description": "Obtiene la información completa del perfil del usuario autenticado, incluyendo roles y permisos. - Acceso: Usuarios autenticados.",
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Perfil de usuario obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtener perfil del usuario actual - Acceso: ADMIN, USER",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/users": {
      "post": {
        "description": "Crea un nuevo usuario en el sistema con roles y permisos específicos. - Acceso: Solo administradores.",
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "El usuario ya existe en el sistema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Crear nuevo usuario - Acceso: ADMIN",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "description": "Obtiene una lista paginada de todos los usuarios del sistema. Solo accesible para administradores.",
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserListResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtener lista de usuarios - Acceso: ADMIN",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/search": {
      "post": {
        "description": "Search users by term with pagination",
        "operationId": "UsersController_exactSearch",
        "parameters": [
          {
            "name": "term",
            "required": true,
            "in": "query",
            "description": "Search term for username or email",
            "schema": {
              "example": "john",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserExactSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users found with pagination metadata"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Search users - Acceso: ADMIN, USER",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/filter": {
      "post": {
        "description": "Búsqueda optimizada para filtrado en tiempo real con debounce. Mínimo 3 caracteres. ACCESO: Solo administradores.",
        "operationId": "UsersController_simpleFilter",
        "parameters": [
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para filtrar usuarios (mínimo 3 caracteres)",
            "schema": {
              "example": "juan",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Límite de resultados por página (máximo 50)",
            "schema": {
              "example": 20,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSimpleFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lista paginada de usuarios filtrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "uuid-123"
                          },
                          "username": {
                            "type": "string",
                            "example": "juan_perez"
                          },
                          "email": {
                            "type": "string",
                            "example": "juan.perez@example.com"
                          },
                          "role": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "user"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 25
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 20
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 2
                        },
                        "hasNext": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPrev": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error de validación - término de búsqueda muy corto",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Filter term must be at least 3 characters long"
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT requerido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Prohibido - Solo administradores pueden filtrar usuarios",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar usuarios en tiempo real - Acceso: ADMIN, USER",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/advanced-filter": {
      "post": {
        "description": "Filtro avanzado de usuarios con múltiples criterios y paginación. ACCESO: Solo administradores.",
        "operationId": "UsersController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Elementos por página",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Campo para ordenar",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Orden de clasificación",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios avanzados para filtrar usuarios",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Juan Pérez"
                  },
                  "email": {
                    "type": "string",
                    "example": "juan.perez@example.com"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "user"
                    ],
                    "example": "user"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  },
                  "createdAfter": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "createdBefore": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-31T23:59:59Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuarios filtrados con metadata de paginación"
          },
          "401": {
            "description": "No autorizado - Token JWT requerido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Prohibido - Solo administradores pueden usar filtros avanzados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar usuarios avanzado (Solo Administradores) - Acceso: ADMIN, USER",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/export/csv": {
      "get": {
        "description": "Exporta la lista completa de usuarios a formato CSV con filtros opcionales para reporting y análisis administrativo. - Acceso: Solo administradores.",
        "operationId": "UsersController_exportToCsv",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filtrar por nombre de usuario",
            "schema": {
              "example": "Juan Pérez",
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filtrar por correo electrónico",
            "schema": {
              "example": "juan.perez@example.com",
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Filtrar por rol de usuario",
            "schema": {
              "enum": [
                "admin",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "Filtrar por estado activo",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "createdDateFrom",
            "required": false,
            "in": "query",
            "description": "Fecha inicial para filtro de fecha de creación",
            "schema": {
              "format": "date",
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "createdDateTo",
            "required": false,
            "in": "query",
            "description": "Fecha final para filtro de fecha de creación",
            "schema": {
              "format": "date",
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "updatedDateFrom",
            "required": false,
            "in": "query",
            "description": "Fecha inicial para filtro de última actualización",
            "schema": {
              "format": "date",
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "updatedDateTo",
            "required": false,
            "in": "query",
            "description": "Fecha final para filtro de última actualización",
            "schema": {
              "format": "date",
              "example": "2024-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV con datos de usuarios filtrados",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT requerido",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Prohibido - Solo administradores pueden exportar CSV",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar usuarios a CSV - Acceso: ADMIN",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "description": "Obtiene la información detallada de un usuario específico por su ID único.",
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del usuario (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - No tiene permisos para ver este usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado con el ID proporcionado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtener usuario por ID - Acceso: ADMIN",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "description": "Actualiza la información de un usuario existente. Los usuarios pueden actualizar su propio perfil, los administradores pueden actualizar cualquier usuario.",
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del usuario a actualizar (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - No tiene permisos para actualizar este usuario",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado con el ID proporcionado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto - El nombre de usuario o email ya están en uso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Actualizar información de usuario - Acceso: ADMIN",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "Realiza una eliminación lógica (soft delete) de un usuario del sistema preservando registros históricos. - Acceso: Solo administradores.",
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del usuario a eliminar (UUID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado exitosamente del sistema",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado con el ID proporcionado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Eliminar usuario del sistema - Acceso: ADMIN",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/genres": {
      "post": {
        "description": "Crea un nuevo género de libro en el catálogo. Solo accesible para administradores.",
        "operationId": "BookGenresController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookGenreDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Género de libro creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "El género ya existe en el sistema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Crear nuevo género de libro - Acceso: ADMIN",
        "tags": [
          "Book Genres"
        ]
      },
      "get": {
        "description": "Obtiene una lista paginada de todos los géneros de libros disponibles en el sistema.",
        "operationId": "BookGenresController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Géneros de libros obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Obtener géneros de libros - Acceso: ADMIN, USER",
        "tags": [
          "Book Genres"
        ]
      }
    },
    "/api/genres/search": {
      "post": {
        "description": "Busca géneros de libros por término en nombre o descripción.",
        "operationId": "BookGenresController_exactSearch",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para filtrar géneros por nombre o descripción",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookGenreExactSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultados de búsqueda de géneros obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar géneros de libros - Acceso: ADMIN, USER",
        "tags": [
          "Book Genres"
        ]
      }
    },
    "/api/genres/filter": {
      "post": {
        "description": "Filtra géneros literarios utilizando parámetros de consulta específicos.",
        "operationId": "BookGenresController_simpleFilter",
        "parameters": [
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "description": "Término de filtrado para géneros",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página (por defecto: 1)",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Elementos por página (por defecto: 10)",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Campo para ordenar (por defecto: createdAt)",
            "schema": {
              "example": "name",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Orden de clasificación (por defecto: DESC)",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookGenreSimpleFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Géneros filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isActive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar géneros literarios - Acceso: ADMIN, USER",
        "tags": [
          "Book Genres"
        ]
      }
    },
    "/api/genres/advanced-filter": {
      "post": {
        "description": "Aplica filtros avanzados sobre los géneros literarios con múltiples criterios.",
        "operationId": "BookGenresController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado avanzado para géneros",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nombre del género"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción del género"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado activo/inactivo"
                  },
                  "createdDateStart": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de creación desde"
                  },
                  "createdDateEnd": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de creación hasta"
                  },
                  "pagination": {
                    "type": "object",
                    "required": [
                      "page",
                      "limit"
                    ],
                    "properties": {
                      "page": {
                        "type": "number",
                        "minimum": 1
                      },
                      "limit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 100
                      },
                      "sortBy": {
                        "type": "string",
                        "default": "createdAt"
                      },
                      "sortOrder": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "default": "DESC"
                      }
                    }
                  }
                },
                "required": [
                  "pagination"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Géneros filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "isActive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtro avanzado de géneros literarios - Acceso: ADMIN, USER",
        "tags": [
          "Book Genres"
        ]
      }
    },
    "/api/genres/export/csv": {
      "get": {
        "description": "Exporta la lista de géneros en formato CSV aplicando filtros opcionales para generar reportes.",
        "operationId": "BookGenresController_exportToCsv",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filtrar por nombre del género",
            "schema": {
              "example": "Fiction",
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "Filtrar por contenido de la descripción",
            "schema": {
              "example": "narrative",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Fecha de inicio para el rango de fechas de creación",
            "schema": {
              "format": "date-time",
              "example": "2024-01-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Fecha de fin para el rango de fechas de creación",
            "schema": {
              "format": "date-time",
              "example": "2024-12-31T23:59:59Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV generado exitosamente",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Tipo de contenido",
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "description": "Disposición del contenido para descarga",
                "schema": {
                  "type": "string",
                  "example": "attachment; filename=\"book_genres_2024-01-01.csv\""
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar géneros a CSV - Acceso: ADMIN",
        "tags": [
          "Book Genres"
        ]
      }
    },
    "/api/genres/{id}": {
      "get": {
        "description": "Obtiene un género específico de libros utilizando su ID único.",
        "operationId": "BookGenresController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del género de libro",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Género de libro obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Género no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Obtener género por ID - Acceso: ADMIN, USER",
        "tags": [
          "Book Genres"
        ]
      },
      "put": {
        "description": "Actualiza un género de libro existente. Solo accesible para administradores.",
        "operationId": "BookGenresController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del género de libro a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Datos para actualizar el género de libro",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookGenreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Género de libro obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta - Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Género no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Actualizar género de libro - Acceso: ADMIN",
        "tags": [
          "Book Genres"
        ]
      },
      "delete": {
        "description": "Elimina (soft delete) un género de libro del sistema. Solo accesible para administradores.",
        "operationId": "BookGenresController_softDelete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del género de libro a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Género de libro eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Género no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "summary": "Eliminar género de libro - Acceso: ADMIN",
        "tags": [
          "Book Genres"
        ]
      }
    },
    "/api/publishing-houses": {
      "post": {
        "description": "Crea una nueva editorial en el sistema. Solo accesible para administradores.",
        "operationId": "PublishingHousesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePublishingHouseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Editorial creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePublishingHouseResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "La editorial ya existe en el sistema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Crear nueva editorial - Acceso: ADMIN",
        "tags": [
          "Publishing Houses"
        ]
      },
      "get": {
        "description": "Obtiene una lista paginada de todas las editoriales registradas con filtros opcionales. Endpoint público.",
        "operationId": "PublishingHousesController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Término de búsqueda para filtrar por nombre de la editorial",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "País para filtrar editoriales",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de editoriales obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishingHouseListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener lista de editoriales - Acceso: ADMIN, USER",
        "tags": [
          "Publishing Houses"
        ]
      }
    },
    "/api/publishing-houses/search": {
      "post": {
        "description": "Busca editoriales por término en nombre, descripción o país.",
        "operationId": "PublishingHousesController_exactSearch",
        "parameters": [
          {
            "name": "term",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para filtrar editoriales",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishingHouseExactSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultados de búsqueda de editoriales obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishingHouseListResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar editoriales - Acceso: ADMIN, USER",
        "tags": [
          "Publishing Houses"
        ]
      }
    },
    "/api/publishing-houses/filter": {
      "post": {
        "description": "Filtra casas editoriales utilizando criterios específicos como nombre, país, sitio web, fechas de creación y actualización.",
        "operationId": "PublishingHousesController_simpleFilter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado para las casas editoriales",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishingHouseFiltersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Casas editoriales filtradas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "foundedYear": {
                                "type": "number"
                              },
                              "websiteUrl": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "isActive": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar casas editoriales con criterios avanzados - Acceso: ADMIN, USER",
        "tags": [
          "Publishing Houses"
        ]
      }
    },
    "/api/publishing-houses/advanced-filter": {
      "post": {
        "description": "Filtra casas editoriales utilizando criterios específicos como nombre, país, sitio web, fechas de creación y actualización.",
        "operationId": "PublishingHousesController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado para las casas editoriales",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishingHouseFiltersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Casas editoriales filtradas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "foundedYear": {
                                "type": "number"
                              },
                              "websiteUrl": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "isActive": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar casas editoriales con criterios avanzados - Acceso: ADMIN, USER",
        "tags": [
          "Publishing Houses"
        ]
      }
    },
    "/api/publishing-houses/export/csv": {
      "get": {
        "description": "Exporta la lista de casas editoriales en formato CSV aplicando filtros opcionales para generar reportes.",
        "operationId": "PublishingHousesController_exportToCsv",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filtrar por nombre de la casa editorial",
            "schema": {
              "example": "Penguin",
              "type": "string"
            }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Filtrar por país",
            "schema": {
              "example": "United States",
              "type": "string"
            }
          },
          {
            "name": "websiteUrl",
            "required": false,
            "in": "query",
            "description": "Filtrar por URL del sitio web",
            "schema": {
              "example": "penguin.com",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Fecha de inicio para el rango de fechas de creación",
            "schema": {
              "format": "date-time",
              "example": "2024-01-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Fecha de fin para el rango de fechas de creación",
            "schema": {
              "format": "date-time",
              "example": "2024-12-31T23:59:59Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV generado exitosamente",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Tipo de contenido",
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "description": "Disposición del contenido para descarga",
                "schema": {
                  "type": "string",
                  "example": "attachment; filename=\"publishing_houses_2024-01-01.csv\""
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar casas editoriales a CSV - Acceso: ADMIN",
        "tags": [
          "Publishing Houses"
        ]
      }
    },
    "/api/publishing-houses/{id}": {
      "get": {
        "description": "Obtiene los detalles completos de una editorial específica usando su ID único. Endpoint público.",
        "operationId": "PublishingHousesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la editorial",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Editorial encontrada y devuelta exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishingHouseResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Editorial no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener editorial por ID - Acceso: ADMIN, USER",
        "tags": [
          "Publishing Houses"
        ]
      },
      "put": {
        "description": "Actualiza la información de una editorial existente. Solo accesible para administradores.",
        "operationId": "PublishingHousesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la editorial a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePublishingHouseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Editorial actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePublishingHouseResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Editorial no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Ya existe otra editorial con el mismo nombre",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Actualizar información de la editorial - Acceso: ADMIN",
        "tags": [
          "Publishing Houses"
        ]
      },
      "delete": {
        "description": "Elimina una editorial del sistema (eliminación lógica). Solo accesible para administradores.",
        "operationId": "PublishingHousesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la editorial a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Editorial eliminada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePublishingHouseResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Editorial no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Eliminar editorial del sistema - Acceso: ADMIN",
        "tags": [
          "Publishing Houses"
        ]
      }
    },
    "/api/book-authors": {
      "post": {
        "description": "Crea un nuevo autor en el sistema con información biográfica y datos de contacto. - Acceso: Solo administradores y gestores de inventario.",
        "operationId": "BookAuthorsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookAuthorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Autor creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookAuthorResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "El autor ya existe en el sistema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Crear nuevo autor - Acceso: ADMIN",
        "tags": [
          "Book Authors"
        ]
      },
      "get": {
        "description": "Obtiene una lista paginada de todos los autores registrados con filtros opcionales. Endpoint público.",
        "operationId": "BookAuthorsController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Término de búsqueda para filtrar por nombre o apellido",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nationality",
            "required": false,
            "in": "query",
            "description": "Nacionalidad para filtrar autores",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de autores obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookAuthorListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener lista de autores - Acceso: ADMIN, USER",
        "tags": [
          "Book Authors"
        ]
      }
    },
    "/api/book-authors/search": {
      "post": {
        "description": "Busca autores por término en nombre, apellido o biografía.",
        "operationId": "BookAuthorsController_exactSearch",
        "parameters": [
          {
            "name": "term",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para filtrar autores",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAuthorExactSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultados de búsqueda de autores obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookAuthorListResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar autores - Acceso: ADMIN, USER",
        "tags": [
          "Book Authors"
        ]
      }
    },
    "/api/book-authors/filter": {
      "post": {
        "description": "Filtra autores utilizando criterios específicos como nombre, nacionalidad, fecha de nacimiento, etc.",
        "operationId": "BookAuthorsController_simpleFilter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado para los autores",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAuthorFiltersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autores filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              },
                              "biography": {
                                "type": "string"
                              },
                              "birthDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "nationality": {
                                "type": "string"
                              },
                              "isActive": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar autores con criterios avanzados - Acceso: ADMIN, USER",
        "tags": [
          "Book Authors"
        ]
      }
    },
    "/api/book-authors/advanced-filter": {
      "post": {
        "description": "Filtra autores utilizando criterios específicos como nombre, nacionalidad, fecha de nacimiento, etc.",
        "operationId": "BookAuthorsController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado para los autores",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAuthorFiltersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autores filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              },
                              "biography": {
                                "type": "string"
                              },
                              "birthDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "nationality": {
                                "type": "string"
                              },
                              "isActive": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar autores con criterios avanzados - Acceso: ADMIN, USER",
        "tags": [
          "Book Authors"
        ]
      }
    },
    "/api/book-authors/export/csv": {
      "get": {
        "description": "Exporta la lista de autores en formato CSV aplicando filtros opcionales para generar reportes.",
        "operationId": "BookAuthorsController_exportToCsv",
        "parameters": [
          {
            "name": "firstName",
            "required": false,
            "in": "query",
            "description": "Filter by first name",
            "schema": {
              "example": "John",
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "required": false,
            "in": "query",
            "description": "Filter by last name",
            "schema": {
              "example": "Doe",
              "type": "string"
            }
          },
          {
            "name": "nationality",
            "required": false,
            "in": "query",
            "description": "Filtrar por nacionalidad",
            "schema": {
              "example": "American",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for authors created date range",
            "schema": {
              "format": "date-time",
              "example": "2024-01-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for authors created date range",
            "schema": {
              "format": "date-time",
              "example": "2024-12-31T23:59:59Z",
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filter by email",
            "schema": {
              "example": "author@example.com",
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filtrar por nombre del autor",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "Filtrar por estado activo/inactivo",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV generado exitosamente",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Tipo de contenido",
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "description": "Disposición del contenido para descarga",
                "schema": {
                  "type": "string",
                  "example": "attachment; filename=\"book_authors_2024-01-01.csv\""
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar autores a CSV - Acceso: ADMIN",
        "tags": [
          "Book Authors"
        ]
      }
    },
    "/api/book-authors/{id}": {
      "get": {
        "description": "Obtiene los detalles completos de un autor específico usando su ID único. Endpoint público.",
        "operationId": "BookAuthorsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del autor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autor encontrado y devuelto exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookAuthorResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Autor no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener autor por ID - Acceso: ADMIN, USER",
        "tags": [
          "Book Authors"
        ]
      },
      "put": {
        "description": "Actualiza la información de un autor existente. Solo accesible para administradores.",
        "operationId": "BookAuthorsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del autor a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookAuthorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autor actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBookAuthorResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Autor no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Ya existe otro autor con el mismo nombre y apellido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Actualizar información del autor - Acceso: ADMIN",
        "tags": [
          "Book Authors"
        ]
      },
      "delete": {
        "description": "Elimina un autor del sistema (eliminación lógica). Solo accesible para administradores.",
        "operationId": "BookAuthorsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del autor a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autor eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBookAuthorResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Autor no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Eliminar autor del sistema - Acceso: ADMIN",
        "tags": [
          "Book Authors"
        ]
      }
    },
    "/api/book-catalog": {
      "post": {
        "description": "Crea un nuevo libro en el catálogo del sistema con toda la información bibliográfica requerida. - Acceso: Solo administradores y gestores de inventario.",
        "operationId": "BookCatalogController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookCatalogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Libro creado exitosamente en el catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BookCatalogResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "El código ISBN ya existe en el catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Crear nuevo libro en el catálogo - Acceso: ADMIN",
        "tags": [
          "Book Catalog"
        ]
      },
      "get": {
        "description": "Obtiene una lista paginada de todos los libros en el catálogo con filtros opcionales. Endpoint público.",
        "operationId": "BookCatalogController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Término de búsqueda para filtrar por título del libro",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "genreId",
            "required": false,
            "in": "query",
            "description": "ID del género para filtrar libros por categoría",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "required": false,
            "in": "query",
            "description": "ID de la editorial para filtrar libros por publicador",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAvailable",
            "required": false,
            "in": "query",
            "description": "Filtrar por disponibilidad del libro",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "minPrice",
            "required": false,
            "in": "query",
            "description": "Precio mínimo para filtrar libros",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "required": false,
            "in": "query",
            "description": "Precio máximo para filtrar libros",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catálogo de libros obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/BookCatalogResponseDto"
                              }
                            },
                            "meta": {
                              "type": "object",
                              "properties": {
                                "total": {
                                  "type": "number"
                                },
                                "page": {
                                  "type": "number"
                                },
                                "limit": {
                                  "type": "number"
                                },
                                "totalPages": {
                                  "type": "number"
                                },
                                "hasNext": {
                                  "type": "boolean"
                                },
                                "hasPrev": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Obtener catálogo de libros - Acceso: ADMIN, USER",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/search": {
      "post": {
        "description": "Realiza búsquedas exactas (WHERE campo = valor) en campos específicos del catálogo de libros.",
        "operationId": "BookCatalogController_exactSearch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Criterios para búsqueda exacta de libros",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searchField": {
                    "type": "string",
                    "enum": [
                      "title",
                      "isbnCode",
                      "author",
                      "genre",
                      "publisher"
                    ],
                    "description": "Campo específico donde buscar exactamente"
                  },
                  "searchValue": {
                    "type": "string",
                    "description": "Valor exacto a buscar"
                  },
                  "page": {
                    "type": "number",
                    "minimum": 1,
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sortBy": {
                    "type": "string",
                    "default": "createdAt"
                  },
                  "sortOrder": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "default": "DESC"
                  }
                },
                "required": [
                  "searchField",
                  "searchValue"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Libros encontrados con búsqueda exacta exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "title": {
                            "type": "string"
                          },
                          "isbnCode": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "stockQuantity": {
                            "type": "number"
                          },
                          "isAvailable": {
                            "type": "boolean"
                          },
                          "publicationDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "genre": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "publisher": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Búsqueda exacta de libros - Acceso: ADMIN, USER",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/filter": {
      "post": {
        "description": "Realiza filtros parciales (LIKE %término%) con un solo término de búsqueda en múltiples campos (título, ISBN, resumen).",
        "operationId": "BookCatalogController_filterPost",
        "parameters": [
          {
            "name": "term",
            "required": false,
            "in": "query",
            "description": "Término parcial para buscar en múltiples campos",
            "schema": {
              "example": "Harry",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Cantidad de elementos por página",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Campo por el cual ordenar",
            "schema": {
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Orden de clasificación",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "description": "Criterios para filtro simple de libros (alternativo a query params)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "term": {
                    "type": "string",
                    "description": "Término parcial para buscar en múltiples campos",
                    "minLength": 3
                  },
                  "page": {
                    "type": "number",
                    "minimum": 1,
                    "default": 1
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 100,
                    "default": 10
                  },
                  "sortBy": {
                    "type": "string",
                    "default": "createdAt"
                  },
                  "sortOrder": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "default": "DESC"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Libros filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "title": {
                            "type": "string"
                          },
                          "isbnCode": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "stockQuantity": {
                            "type": "number"
                          },
                          "isAvailable": {
                            "type": "boolean"
                          },
                          "publicationDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "genre": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "publisher": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtro simple de libros - Acceso: ADMIN, USER",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/advanced-filter": {
      "post": {
        "description": "Aplica filtros avanzados sobre el catálogo de libros con múltiples criterios de búsqueda.",
        "operationId": "BookCatalogController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado avanzado para libros",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Título del libro"
                  },
                  "isbn": {
                    "type": "string",
                    "description": "ISBN del libro"
                  },
                  "genreId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID del género"
                  },
                  "publishingHouseId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID de la editorial"
                  },
                  "minPrice": {
                    "type": "number",
                    "description": "Precio mínimo"
                  },
                  "maxPrice": {
                    "type": "number",
                    "description": "Precio máximo"
                  },
                  "isAvailable": {
                    "type": "boolean",
                    "description": "Disponibilidad"
                  },
                  "publicationYear": {
                    "type": "number",
                    "description": "Año de publicación"
                  },
                  "pagination": {
                    "type": "object",
                    "required": [
                      "page",
                      "limit"
                    ],
                    "properties": {
                      "page": {
                        "type": "number",
                        "minimum": 1
                      },
                      "limit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 100
                      },
                      "sortBy": {
                        "type": "string",
                        "default": "createdAt"
                      },
                      "sortOrder": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "default": "DESC"
                      }
                    }
                  }
                },
                "required": [
                  "pagination"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Libros filtrados obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "title": {
                            "type": "string"
                          },
                          "isbn": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "stockQuantity": {
                            "type": "number"
                          },
                          "isAvailable": {
                            "type": "boolean"
                          },
                          "publicationDate": {
                            "type": "string",
                            "format": "date"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtro avanzado de libros del catálogo - Acceso: ADMIN, USER",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/export/csv": {
      "get": {
        "description": "Exporta el catálogo completo de libros a formato CSV con filtros opcionales para análisis y reporting. Incluye todos los metadatos bibliográficos y información de inventario. - Acceso: Administradores, gestores de inventario y usuarios regulares.\n        \n        **Filtros disponibles:**\n        - Título del libro\n        - Género (ID)\n        - Editorial (ID) \n        - Disponibilidad\n        - Rango de precios\n        - Autor\n        - Rango de fecha de publicación\n        - Rango de fecha de creación\n        \n        **Formato del archivo CSV:**\n        - Separador: coma (,)\n        - Codificación: UTF-8\n        - Headers incluidos: ID, Título, ISBN, Precio, Disponible, Stock, Género, Editorial, Fecha Publicación, Páginas, Fecha Creación, Resumen",
        "operationId": "BookCatalogController_exportToCsv",
        "parameters": [
          {
            "name": "title",
            "required": false,
            "in": "query",
            "description": "Filtrar por título del libro",
            "schema": {
              "example": "Harry Potter",
              "type": "string"
            }
          },
          {
            "name": "genreId",
            "required": false,
            "in": "query",
            "description": "Filtrar por ID del género",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "required": false,
            "in": "query",
            "description": "Filtrar por ID de la editorial",
            "schema": {
              "format": "uuid",
              "example": "550e8400-e29b-41d4-a716-446655440001",
              "type": "string"
            }
          },
          {
            "name": "isAvailable",
            "required": false,
            "in": "query",
            "description": "Filtrar por disponibilidad",
            "schema": {
              "example": true,
              "type": "boolean"
            }
          },
          {
            "name": "minPrice",
            "required": false,
            "in": "query",
            "description": "Precio mínimo",
            "schema": {
              "minimum": 0,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "required": false,
            "in": "query",
            "description": "Precio máximo",
            "schema": {
              "minimum": 0,
              "example": 50,
              "type": "number"
            }
          },
          {
            "name": "author",
            "required": false,
            "in": "query",
            "description": "Filtrar por nombre del autor",
            "schema": {
              "example": "J.K. Rowling",
              "type": "string"
            }
          },
          {
            "name": "publicationDateFrom",
            "required": false,
            "in": "query",
            "description": "Fecha de publicación desde (YYYY-MM-DD)",
            "schema": {
              "format": "date",
              "example": "2020-01-01",
              "type": "string"
            }
          },
          {
            "name": "publicationDateTo",
            "required": false,
            "in": "query",
            "description": "Fecha de publicación hasta (YYYY-MM-DD)",
            "schema": {
              "format": "date",
              "example": "2023-12-31",
              "type": "string"
            }
          },
          {
            "name": "createdDateFrom",
            "required": false,
            "in": "query",
            "description": "Fecha de creación desde (YYYY-MM-DD)",
            "schema": {
              "format": "date",
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "createdDateTo",
            "required": false,
            "in": "query",
            "description": "Fecha de creación hasta (YYYY-MM-DD)",
            "schema": {
              "format": "date",
              "example": "2023-12-31",
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Tipo de contenido devuelto",
            "schema": {
              "type": "string",
              "example": "text/csv; charset=utf-8"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "Información de descarga del archivo",
            "schema": {
              "type": "string",
              "example": "attachment; filename=\"catalogo-libros.csv\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV del catálogo de libros",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "example": "ID,Título,ISBN,Precio,Disponible,Stock,Género,Editorial,Fecha Publicación,Páginas,Fecha Creación,Resumen\n\"550e8400-e29b-41d4-a716-446655440000\",\"El Quijote\",\"9788423974944\",\"29.95\",\"Sí\",\"50\",\"Clásicos\",\"Planeta\",\"1605-01-01\",\"863\",\"2023-01-15\",\"Las aventuras del ingenioso hidalgo...\""
                }
              }
            }
          },
          "400": {
            "description": "Parámetros de filtro inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso prohibido - Sin permisos suficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to export books to CSV"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Exportar catálogo de libros a CSV - Acceso: ADMIN, USER",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/{id}": {
      "get": {
        "description": "Obtiene los detalles completos de un libro específico del catálogo usando su ID único. Endpoint público.",
        "operationId": "BookCatalogController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del libro en el catálogo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Libro encontrado y devuelto exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BookCatalogResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Libro no encontrado en el catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "summary": "Obtener libro por ID - Acceso: ADMIN, USER",
        "tags": [
          "Book Catalog"
        ]
      },
      "put": {
        "description": "Actualiza la información de un libro existente en el catálogo. Solo accesible para administradores.",
        "operationId": "BookCatalogController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del libro a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookCatalogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Libro actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BookCatalogResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o errores de validación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Libro no encontrado en el catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "El código ISBN ya está en uso por otro libro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Actualizar libro del catálogo - Acceso: ADMIN",
        "tags": [
          "Book Catalog"
        ]
      },
      "delete": {
        "description": "Elimina un libro del catálogo del sistema mediante eliminación lógica, preservando registros históricos. - Acceso: Solo administradores.",
        "operationId": "BookCatalogController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único del libro a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Libro eliminado exitosamente del catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Libro no encontrado en el catálogo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Eliminar libro del catálogo - Acceso: ADMIN",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/{id}/upload-cover": {
      "post": {
        "description": "Sube o reemplaza la imagen de portada para un libro específico. Soporta formatos JPEG, PNG, WebP y GIF hasta 5MB. - Acceso: Solo administradores y gestores de inventario.",
        "operationId": "BookCatalogController_uploadBookCover",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID of the book to upload cover for",
            "schema": {
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Book cover image file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverImage": {
                    "type": "string",
                    "format": "binary",
                    "description": "Book cover image file (JPEG, PNG, WebP, GIF - max 5MB)"
                  }
                },
                "required": [
                  "coverImage"
                ],
                "$ref": "#/components/schemas/UploadBookCoverDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book cover uploaded successfully and book updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Book cover uploaded successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "550e8400-e29b-41d4-a716-446655440000"
                        },
                        "title": {
                          "type": "string",
                          "example": "The Shining"
                        },
                        "coverImageUrl": {
                          "type": "string",
                          "example": "/uploads/books/the_shining.cover_image.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid file format, size, or missing file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid file type. Allowed types: image/jpeg, image/png, image/webp, image/gif"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin role required"
          },
          "404": {
            "description": "Book not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Subir imagen de portada de libro - Acceso: ADMIN",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/book-catalog/{id}/cover": {
      "delete": {
        "description": "Elimina la imagen de portada de un libro específico y borra el archivo del almacenamiento. - Acceso: Solo administradores y gestores de inventario.",
        "operationId": "BookCatalogController_removeBookCover",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID of the book to remove cover from",
            "schema": {
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No cover image to remove",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No cover image to remove"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "403": {
            "description": "Admin role required"
          },
          "404": {
            "description": "Book not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Eliminar imagen de portada de libro - Acceso: ADMIN",
        "tags": [
          "Book Catalog"
        ]
      }
    },
    "/api/inventory_movements": {
      "get": {
        "description": "Recupera una lista paginada de todas los movimientos de inventario del sistema.",
        "operationId": "InventoryMovementsController_getAllInventoryMovements",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página (por defecto: 1)",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Cantidad de elementos por página (por defecto: 10)",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Campo por el cual movimientoar (por defecto: createdAt)",
            "schema": {
              "default": "createdAt",
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortInventoryMovement",
            "required": false,
            "in": "query",
            "description": "Movimiento de inventario de clasificación (por defecto: DESC)",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de órdenes recuperada exitosamente"
          },
          "401": {
            "description": "No autorizado - Token JWT faltante o inválido"
          },
          "403": {
            "description": "Prohibido - Sin permisos suficientes"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todas los movimientos de inventario con paginación - Acceso: ADMIN, USER",
        "tags": [
          "InventoryMovements",
          "InventoryMovements"
        ]
      }
    },
    "/api/inventory_movements/{id}": {
      "get": {
        "description": "Recupera los detalles de una movimiento específica mediante su ID único.",
        "operationId": "InventoryMovementsController_getInventoryMovementById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la movimiento (UUID)",
            "schema": {
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movimiento de inventario encontrada y devuelta exitosamente"
          },
          "401": {
            "description": "No autorizado - Token JWT faltante o inválido"
          },
          "403": {
            "description": "Prohibido - Sin permisos suficientes"
          },
          "404": {
            "description": "Movimiento de inventario no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una movimiento por ID - Acceso: ADMIN, USER",
        "tags": [
          "InventoryMovements",
          "InventoryMovements"
        ]
      }
    },
    "/api/inventory_movements/search": {
      "post": {
        "description": "\n        Busca movimientos de inventario aplicando filtros, búsquedas de texto y filtros avanzados.\n        \n        Control de acceso por rol:\n        - ADMIN: puede ver todos los movimientos o filtrar por usuario específico\n        - USER: solo sus propios movimientos\n        \n        Control de acceso por rol:\n        - USER: Solo puede ver sus propios movimientos, independientemente de los filtros aplicados\n        - ADMIN: Puede ver todos los movimientos o filtrar por usuario específico usando filters.userId\n      ",
        "operationId": "InventoryMovementsController_exactSearch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Criterios de búsqueda y paginación",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pagination"
                ],
                "properties": {
                  "pagination": {
                    "type": "object",
                    "required": [
                      "page",
                      "limit"
                    ],
                    "properties": {
                      "page": {
                        "type": "number",
                        "minimum": 1,
                        "description": "Número de página"
                      },
                      "limit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 100,
                        "description": "Elementos por página"
                      },
                      "sortBy": {
                        "type": "string",
                        "default": "createdAt",
                        "description": "Campo para ordenar"
                      },
                      "sortOrder": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "default": "DESC",
                        "description": "Orden de clasificación"
                      }
                    }
                  },
                  "filters": {
                    "type": "object",
                    "description": "Filtros básicos",
                    "properties": {
                      "movementType": {
                        "type": "string",
                        "enum": [
                          "CREATE",
                          "UPDATE",
                          "DELETE"
                        ],
                        "description": "Tipo de movimiento"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "PENDING",
                          "COMPLETED",
                          "ERROR"
                        ],
                        "description": "Estado del movimiento"
                      },
                      "entityType": {
                        "type": "string",
                        "description": "Tipo de entidad afectada"
                      },
                      "entityId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de la entidad afectada"
                      },
                      "userId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID del usuario (solo ADMIN)"
                      },
                      "userRole": {
                        "type": "string",
                        "description": "Rol del usuario"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de inicio (YYYY-MM-DD)"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de fin (YYYY-MM-DD)"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Estado activo/inactivo"
                      }
                    }
                  },
                  "search": {
                    "type": "object",
                    "description": "Búsquedas de texto",
                    "properties": {
                      "searchTerm": {
                        "type": "string",
                        "description": "Término de búsqueda general (notas, usuario, entidad)"
                      },
                      "userFullName": {
                        "type": "string",
                        "description": "Búsqueda por nombre de usuario"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Búsqueda en notas"
                      }
                    }
                  },
                  "advancedFilters": {
                    "type": "object",
                    "description": "Filtros avanzados por rangos numéricos",
                    "properties": {
                      "minPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior mínimo"
                      },
                      "maxPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior máximo"
                      },
                      "minPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior mínimo"
                      },
                      "maxPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior máximo"
                      },
                      "minQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior mínima"
                      },
                      "maxQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior máxima"
                      },
                      "minQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior mínima"
                      },
                      "maxQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior máxima"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Búsqueda completada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "entityType": {
                                "type": "string"
                              },
                              "entityId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "movementType": {
                                "type": "string",
                                "enum": [
                                  "CREATE",
                                  "UPDATE",
                                  "DELETE"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "PENDING",
                                  "COMPLETED",
                                  "ERROR"
                                ]
                              },
                              "userId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "userFullName": {
                                "type": "string"
                              },
                              "userRole": {
                                "type": "string"
                              },
                              "priceBefore": {
                                "type": "number"
                              },
                              "priceAfter": {
                                "type": "number"
                              },
                              "quantityBefore": {
                                "type": "number"
                              },
                              "quantityAfter": {
                                "type": "number"
                              },
                              "notes": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "totalItems": {
                              "type": "number"
                            },
                            "itemCount": {
                              "type": "number"
                            },
                            "itemsPerPage": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "currentPage": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "401": {
            "description": "No autorizado - Token requerido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar movimientos de inventario con filtros avanzados - Acceso: ADMIN, USER",
        "tags": [
          "InventoryMovements"
        ]
      }
    },
    "/api/inventory_movements/filter": {
      "post": {
        "description": "\n        Busca movimientos de inventario aplicando filtros, búsquedas de texto y filtros avanzados.\n        \n        Control de acceso por rol:\n        - ADMIN: puede ver todos los movimientos o filtrar por usuario específico\n        - USER: solo sus propios movimientos\n        \n        Control de acceso por rol:\n        - USER: Solo puede ver sus propios movimientos, independientemente de los filtros aplicados\n        - ADMIN: Puede ver todos los movimientos o filtrar por usuario específico usando filters.userId\n      ",
        "operationId": "InventoryMovementsController_simpleFilter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Criterios de búsqueda y paginación",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pagination"
                ],
                "properties": {
                  "pagination": {
                    "type": "object",
                    "required": [
                      "page",
                      "limit"
                    ],
                    "properties": {
                      "page": {
                        "type": "number",
                        "minimum": 1,
                        "description": "Número de página"
                      },
                      "limit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 100,
                        "description": "Elementos por página"
                      },
                      "sortBy": {
                        "type": "string",
                        "default": "createdAt",
                        "description": "Campo para ordenar"
                      },
                      "sortOrder": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "default": "DESC",
                        "description": "Orden de clasificación"
                      }
                    }
                  },
                  "filters": {
                    "type": "object",
                    "description": "Filtros básicos",
                    "properties": {
                      "movementType": {
                        "type": "string",
                        "enum": [
                          "CREATE",
                          "UPDATE",
                          "DELETE"
                        ],
                        "description": "Tipo de movimiento"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "PENDING",
                          "COMPLETED",
                          "ERROR"
                        ],
                        "description": "Estado del movimiento"
                      },
                      "entityType": {
                        "type": "string",
                        "description": "Tipo de entidad afectada"
                      },
                      "entityId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de la entidad afectada"
                      },
                      "userId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID del usuario (solo ADMIN)"
                      },
                      "userRole": {
                        "type": "string",
                        "description": "Rol del usuario"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de inicio (YYYY-MM-DD)"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de fin (YYYY-MM-DD)"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Estado activo/inactivo"
                      }
                    }
                  },
                  "search": {
                    "type": "object",
                    "description": "Búsquedas de texto",
                    "properties": {
                      "searchTerm": {
                        "type": "string",
                        "description": "Término de búsqueda general (notas, usuario, entidad)"
                      },
                      "userFullName": {
                        "type": "string",
                        "description": "Búsqueda por nombre de usuario"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Búsqueda en notas"
                      }
                    }
                  },
                  "advancedFilters": {
                    "type": "object",
                    "description": "Filtros avanzados por rangos numéricos",
                    "properties": {
                      "minPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior mínimo"
                      },
                      "maxPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior máximo"
                      },
                      "minPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior mínimo"
                      },
                      "maxPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior máximo"
                      },
                      "minQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior mínima"
                      },
                      "maxQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior máxima"
                      },
                      "minQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior mínima"
                      },
                      "maxQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior máxima"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Búsqueda completada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "entityType": {
                                "type": "string"
                              },
                              "entityId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "movementType": {
                                "type": "string",
                                "enum": [
                                  "CREATE",
                                  "UPDATE",
                                  "DELETE"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "PENDING",
                                  "COMPLETED",
                                  "ERROR"
                                ]
                              },
                              "userId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "userFullName": {
                                "type": "string"
                              },
                              "userRole": {
                                "type": "string"
                              },
                              "priceBefore": {
                                "type": "number"
                              },
                              "priceAfter": {
                                "type": "number"
                              },
                              "quantityBefore": {
                                "type": "number"
                              },
                              "quantityAfter": {
                                "type": "number"
                              },
                              "notes": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "totalItems": {
                              "type": "number"
                            },
                            "itemCount": {
                              "type": "number"
                            },
                            "itemsPerPage": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "currentPage": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "401": {
            "description": "No autorizado - Token requerido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar movimientos de inventario con filtros avanzados - Acceso: ADMIN, USER",
        "tags": [
          "InventoryMovements"
        ]
      }
    },
    "/api/inventory_movements/advanced-filter": {
      "post": {
        "description": "\n        Busca movimientos de inventario aplicando filtros, búsquedas de texto y filtros avanzados.\n        \n        Control de acceso por rol:\n        - ADMIN: puede ver todos los movimientos o filtrar por usuario específico\n        - USER: solo sus propios movimientos\n        \n        Control de acceso por rol:\n        - USER: Solo puede ver sus propios movimientos, independientemente de los filtros aplicados\n        - ADMIN: Puede ver todos los movimientos o filtrar por usuario específico usando filters.userId\n      ",
        "operationId": "InventoryMovementsController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de búsqueda y paginación",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pagination"
                ],
                "properties": {
                  "pagination": {
                    "type": "object",
                    "required": [
                      "page",
                      "limit"
                    ],
                    "properties": {
                      "page": {
                        "type": "number",
                        "minimum": 1,
                        "description": "Número de página"
                      },
                      "limit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 100,
                        "description": "Elementos por página"
                      },
                      "sortBy": {
                        "type": "string",
                        "default": "createdAt",
                        "description": "Campo para ordenar"
                      },
                      "sortOrder": {
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "default": "DESC",
                        "description": "Orden de clasificación"
                      }
                    }
                  },
                  "filters": {
                    "type": "object",
                    "description": "Filtros básicos",
                    "properties": {
                      "movementType": {
                        "type": "string",
                        "enum": [
                          "CREATE",
                          "UPDATE",
                          "DELETE"
                        ],
                        "description": "Tipo de movimiento"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "PENDING",
                          "COMPLETED",
                          "ERROR"
                        ],
                        "description": "Estado del movimiento"
                      },
                      "entityType": {
                        "type": "string",
                        "description": "Tipo de entidad afectada"
                      },
                      "entityId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de la entidad afectada"
                      },
                      "userId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID del usuario (solo ADMIN)"
                      },
                      "userRole": {
                        "type": "string",
                        "description": "Rol del usuario"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de inicio (YYYY-MM-DD)"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de fin (YYYY-MM-DD)"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Estado activo/inactivo"
                      }
                    }
                  },
                  "search": {
                    "type": "object",
                    "description": "Búsquedas de texto",
                    "properties": {
                      "searchTerm": {
                        "type": "string",
                        "description": "Término de búsqueda general (notas, usuario, entidad)"
                      },
                      "userFullName": {
                        "type": "string",
                        "description": "Búsqueda por nombre de usuario"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Búsqueda en notas"
                      }
                    }
                  },
                  "advancedFilters": {
                    "type": "object",
                    "description": "Filtros avanzados por rangos numéricos",
                    "properties": {
                      "minPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior mínimo"
                      },
                      "maxPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior máximo"
                      },
                      "minPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior mínimo"
                      },
                      "maxPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior máximo"
                      },
                      "minQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior mínima"
                      },
                      "maxQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior máxima"
                      },
                      "minQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior mínima"
                      },
                      "maxQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior máxima"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Búsqueda completada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "entityType": {
                                "type": "string"
                              },
                              "entityId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "movementType": {
                                "type": "string",
                                "enum": [
                                  "CREATE",
                                  "UPDATE",
                                  "DELETE"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "PENDING",
                                  "COMPLETED",
                                  "ERROR"
                                ]
                              },
                              "userId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "userFullName": {
                                "type": "string"
                              },
                              "userRole": {
                                "type": "string"
                              },
                              "priceBefore": {
                                "type": "number"
                              },
                              "priceAfter": {
                                "type": "number"
                              },
                              "quantityBefore": {
                                "type": "number"
                              },
                              "quantityAfter": {
                                "type": "number"
                              },
                              "notes": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "totalItems": {
                              "type": "number"
                            },
                            "itemCount": {
                              "type": "number"
                            },
                            "itemsPerPage": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "currentPage": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "401": {
            "description": "No autorizado - Token requerido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar movimientos de inventario con filtros avanzados - Acceso: ADMIN, USER",
        "tags": [
          "InventoryMovements"
        ]
      }
    },
    "/api/inventory_movements/export/csv": {
      "get": {
        "description": "\n        Exporta los movimientos de inventario en formato CSV aplicando filtros obligatorios.\n        \n        Control de acceso por rol:\n        - ADMIN: puede exportar todos los movimientos o filtrar por usuario específico\n        - USER: solo sus propios movimientos\n        \n        IMPORTANTE: Al menos un filtro es obligatorio (filters, search o advancedFilters debe contener al menos un parámetro).\n        \n        Control de acceso por rol:\n        - USER: Solo puede exportar sus propios movimientos, independientemente de los filtros aplicados\n        - ADMIN: Puede exportar todos los movimientos o filtrar por usuario específico usando filters.userId\n      ",
        "operationId": "InventoryMovementsController_exportMovementsCsv",
        "parameters": [
          {
            "name": "filters",
            "required": true,
            "in": "query",
            "description": "Filtros básicos para la exportación (OBLIGATORIO - debe contener al menos un filtro)",
            "schema": {
              "$ref": "#/components/schemas/MovementFiltersDto"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Parámetros de búsqueda por texto",
            "schema": {
              "$ref": "#/components/schemas/MovementSearchDto"
            }
          },
          {
            "name": "advancedFilters",
            "required": false,
            "in": "query",
            "description": "Filtros avanzados por rangos numéricos",
            "schema": {
              "$ref": "#/components/schemas/MovementAdvancedFiltersDto"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Filtros para la exportación (al menos un filtro es obligatorio)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "filters"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "description": "Filtros básicos (obligatorio)",
                    "properties": {
                      "movementType": {
                        "type": "string",
                        "enum": [
                          "CREATE",
                          "UPDATE",
                          "DELETE"
                        ],
                        "description": "Tipo de movimiento"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "PENDING",
                          "COMPLETED",
                          "ERROR"
                        ],
                        "description": "Estado del movimiento"
                      },
                      "entityType": {
                        "type": "string",
                        "description": "Tipo de entidad afectada"
                      },
                      "entityId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de la entidad afectada"
                      },
                      "userId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID del usuario (solo ADMIN)"
                      },
                      "userRole": {
                        "type": "string",
                        "description": "Rol del usuario"
                      },
                      "startDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de inicio (YYYY-MM-DD)"
                      },
                      "endDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Fecha de fin (YYYY-MM-DD)"
                      },
                      "isActive": {
                        "type": "boolean",
                        "description": "Estado activo/inactivo"
                      }
                    }
                  },
                  "search": {
                    "type": "object",
                    "description": "Búsquedas de texto (opcional)",
                    "properties": {
                      "searchTerm": {
                        "type": "string",
                        "description": "Término de búsqueda general (notas, usuario, entidad)"
                      },
                      "userFullName": {
                        "type": "string",
                        "description": "Búsqueda por nombre de usuario"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Búsqueda en notas"
                      }
                    }
                  },
                  "advancedFilters": {
                    "type": "object",
                    "description": "Filtros avanzados por rangos numéricos (opcional)",
                    "properties": {
                      "minPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior mínimo"
                      },
                      "maxPriceBefore": {
                        "type": "number",
                        "description": "Precio anterior máximo"
                      },
                      "minPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior mínimo"
                      },
                      "maxPriceAfter": {
                        "type": "number",
                        "description": "Precio posterior máximo"
                      },
                      "minQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior mínima"
                      },
                      "maxQuantityBefore": {
                        "type": "number",
                        "description": "Cantidad anterior máxima"
                      },
                      "minQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior mínima"
                      },
                      "maxQuantityAfter": {
                        "type": "number",
                        "description": "Cantidad posterior máxima"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archivo CSV generado exitosamente",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Tipo de contenido",
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "description": "Disposición del contenido para descarga",
                "schema": {
                  "type": "string",
                  "example": "attachment; filename=\"movimientos-inventario.csv\""
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o filtros insuficientes"
          },
          "401": {
            "description": "No autorizado - Token requerido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar movimientos de inventario a CSV - Acceso: ADMIN, USER",
        "tags": [
          "InventoryMovements"
        ]
      }
    },
    "/api/book-author-assignments": {
      "post": {
        "description": "Crea una nueva asignación entre un libro y un autor. Solo accesible para administradores.",
        "operationId": "BookAuthorAssignmentsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Datos para crear la asignación libro-autor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookAuthorAssignmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asignación libro-autor creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "bookId": {
                      "type": "string"
                    },
                    "authorId": {
                      "type": "string"
                    },
                    "assignmentOrder": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta - Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          }
        },
        "summary": "Crear asignación autor-libro - Acceso: ADMIN",
        "tags": [
          "Book Author Assignments"
        ]
      },
      "get": {
        "description": "Obtiene una lista paginada de todas las asignaciones entre libros y autores.",
        "operationId": "BookAuthorAssignmentsController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignaciones libro-autor obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "bookId": {
                            "type": "string"
                          },
                          "authorId": {
                            "type": "string"
                          },
                          "assignmentOrder": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Obtener asignaciones autor-libro - Acceso: ADMIN, USER",
        "tags": [
          "Book Author Assignments"
        ]
      }
    },
    "/api/book-author-assignments/search": {
      "post": {
        "description": "Busca asignaciones entre autores y libros utilizando un término de búsqueda.",
        "operationId": "BookAuthorAssignmentsController_exactSearch",
        "parameters": [
          {
            "name": "term",
            "required": true,
            "in": "query",
            "description": "Término de búsqueda para asignaciones (nombre de autor o título de libro)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página (por defecto: 1)",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Elementos por página (por defecto: 10)",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Campo para ordenar (por defecto: createdAt)",
            "schema": {
              "example": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Orden de clasificación (por defecto: DESC)",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentExactSearchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignaciones encontradas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "bookId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "authorId": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "book": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "title": {
                                "type": "string"
                              },
                              "isbn": {
                                "type": "string"
                              }
                            }
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "limit": {
                          "type": "number"
                        },
                        "totalPages": {
                          "type": "number"
                        },
                        "hasNext": {
                          "type": "boolean"
                        },
                        "hasPrev": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar asignaciones autor-libro - Acceso: ADMIN, USER",
        "tags": [
          "Book Author Assignments"
        ]
      }
    },
    "/api/book-author-assignments/filter": {
      "post": {
        "description": "Filtra asignaciones entre libros y autores utilizando criterios específicos como ID de libro, ID de autor, fechas de creación.",
        "operationId": "BookAuthorAssignmentsController_simpleFilter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado para las asignaciones libro-autor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentFiltersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignaciones libro-autor filtradas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "bookId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "authorId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "book": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "isbn": {
                                    "type": "string"
                                  },
                                  "publicationDate": {
                                    "type": "string",
                                    "format": "date"
                                  }
                                }
                              },
                              "author": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "nationality": {
                                    "type": "string"
                                  },
                                  "birthDate": {
                                    "type": "string",
                                    "format": "date"
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar asignaciones libro-autor con criterios avanzados - Acceso: ADMIN, USER",
        "tags": [
          "Book Author Assignments"
        ]
      }
    },
    "/api/book-author-assignments/advanced-filter": {
      "post": {
        "description": "Filtra asignaciones entre libros y autores utilizando criterios específicos como ID de libro, ID de autor, fechas de creación.",
        "operationId": "BookAuthorAssignmentsController_advancedFilter",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Criterios de filtrado para las asignaciones libro-autor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentFiltersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignaciones libro-autor filtradas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "bookId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "authorId": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "book": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "isbn": {
                                    "type": "string"
                                  },
                                  "publicationDate": {
                                    "type": "string",
                                    "format": "date"
                                  }
                                }
                              },
                              "author": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "nationality": {
                                    "type": "string"
                                  },
                                  "birthDate": {
                                    "type": "string",
                                    "format": "date"
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "page": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "totalPages": {
                              "type": "number"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "hasPrev": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Filtrar asignaciones libro-autor con criterios avanzados - Acceso: ADMIN, USER",
        "tags": [
          "Book Author Assignments"
        ]
      }
    },
    "/api/book-author-assignments/export/csv": {
      "get": {
        "description": "Exporta la lista de asignaciones entre libros y autores en formato CSV aplicando filtros opcionales para generar reportes.",
        "operationId": "BookAuthorAssignmentsController_exportToCsv",
        "parameters": [
          {
            "name": "bookId",
            "required": false,
            "in": "query",
            "description": "Filtrar por ID del libro",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "authorId",
            "required": false,
            "in": "query",
            "description": "Filtrar por ID del autor",
            "schema": {
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174001",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Fecha de inicio para el rango de fechas de creación de asignaciones",
            "schema": {
              "format": "date-time",
              "example": "2024-01-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Fecha de fin para el rango de fechas de creación de asignaciones",
            "schema": {
              "format": "date-time",
              "example": "2024-12-31T23:59:59Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archivo CSV generado exitosamente",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "Tipo de contenido",
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "description": "Disposición del contenido para descarga",
                "schema": {
                  "type": "string",
                  "example": "attachment; filename=\"book_author_assignments_2024-01-01.csv\""
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Exportar asignaciones libro-autor a CSV - Acceso: ADMIN",
        "tags": [
          "Book Author Assignments"
        ]
      }
    },
    "/api/book-author-assignments/{id}": {
      "get": {
        "description": "Obtiene una asignación específica entre libro y autor por su ID.",
        "operationId": "BookAuthorAssignmentsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la asignación libro-autor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignación libro-autor obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "bookId": {
                      "type": "string"
                    },
                    "authorId": {
                      "type": "string"
                    },
                    "assignmentOrder": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Asignación no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "summary": "Obtener asignación por ID - Acceso: ADMIN, USER",
        "tags": [
          "Book Author Assignments"
        ]
      },
      "put": {
        "description": "Actualiza una asignación existente entre un libro y un autor. Solo accesible para administradores.",
        "operationId": "BookAuthorAssignmentsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la asignación libro-autor a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Datos para actualizar la asignación libro-autor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookAuthorAssignmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignación libro-autor actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "bookId": {
                      "type": "string"
                    },
                    "authorId": {
                      "type": "string"
                    },
                    "assignmentOrder": {
                      "type": "number"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta - Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Asignación no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "summary": "Actualizar asignación autor-libro - Acceso: ADMIN",
        "tags": [
          "Book Author Assignments"
        ]
      },
      "delete": {
        "description": "Elimina (soft delete) una asignación entre un libro y un autor. Solo accesible para administradores.",
        "operationId": "BookAuthorAssignmentsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la asignación libro-autor a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignación libro-autor eliminada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token JWT inválido o faltante",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Asignación no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponseDto"
                }
              }
            }
          }
        },
        "summary": "Eliminar asignación autor-libro - Acceso: ADMIN",
        "tags": [
          "Book Author Assignments"
        ]
      }
    }
  },
  "info": {
    "title": "Store API Documentation",
    "description": "Store API is a simple API that allows you to manage books.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "PaginationDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          }
        }
      },
      "ApiResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 200,
            "description": "Status code"
          },
          "message": {
            "type": "string",
            "example": "Success",
            "description": "Response message"
          }
        },
        "required": [
          "statusCode",
          "message"
        ]
      },
      "AuditLogResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único del registro de auditoría",
            "example": "b8c4e4b2-1234-5678-9abc-def123456789"
          },
          "performedBy": {
            "type": "string",
            "description": "ID del usuario que realizó la acción",
            "example": "user-uuid-123"
          },
          "entityId": {
            "type": "string",
            "description": "ID de la entidad afectada por la acción",
            "example": "entity-uuid-456"
          },
          "action": {
            "type": "string",
            "description": "Tipo de acción realizada",
            "enum": [
              "CREATE",
              "UPDATE",
              "DELETE",
              "READ",
              "LOGIN",
              "REGISTER"
            ],
            "example": "CREATE"
          },
          "details": {
            "type": "string",
            "description": "Descripción detallada de la acción realizada",
            "example": "Usuario creado exitosamente con email: john@example.com"
          },
          "entityType": {
            "type": "string",
            "description": "Tipo de entidad afectada",
            "example": "User"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha y hora cuando se registró la auditoría",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "performedBy",
          "entityId",
          "action",
          "details",
          "entityType",
          "createdAt"
        ]
      },
      "AuditLogListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Lista de registros de auditoría",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogResponseDto"
            }
          },
          "meta": {
            "type": "object",
            "description": "Información de paginación",
            "example": {
              "total": 150,
              "page": 1,
              "limit": 20,
              "totalPages": 8,
              "hasNext": true,
              "hasPrev": false
            }
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "AuditExactSearchDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "searchField": {
            "type": "string",
            "description": "Field to search exactly in",
            "example": "action",
            "enum": [
              "performedBy",
              "entityId",
              "action",
              "entityType",
              "result"
            ]
          },
          "searchValue": {
            "type": "string",
            "description": "Exact value to search for",
            "example": "CREATE"
          }
        },
        "required": [
          "searchField",
          "searchValue"
        ]
      },
      "AuditSimpleFilterDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "term": {
            "type": "string",
            "description": "Search term to filter across multiple fields (performedBy, entityId, details, entityType)",
            "example": "user123"
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Dirección de email del usuario",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "Password123!",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único del usuario",
            "example": "b8c4e4b2-1234-5678-9abc-def123456789"
          },
          "username": {
            "type": "string",
            "description": "Nombre de usuario único",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "description": "Dirección de email del usuario",
            "example": "john@example.com"
          },
          "role": {
            "type": "string",
            "description": "Rol del usuario en el sistema",
            "example": "user",
            "enum": [
              "admin",
              "user"
            ]
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "role"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Token JWT para autenticación",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "description": "Información del usuario autenticado",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileDto"
              }
            ]
          }
        },
        "required": [
          "access_token",
          "user"
        ]
      },
      "BadRequestResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "HTTP status code"
          },
          "message": {
            "description": "Error message or array of validation errors",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "error": {
            "type": "string",
            "description": "Error type"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "UnauthorizedResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 401,
            "description": "Status code"
          },
          "message": {
            "type": "string",
            "example": "Unauthorized",
            "description": "Error message"
          }
        },
        "required": [
          "statusCode",
          "message"
        ]
      },
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Nombre de usuario único para el sistema",
            "example": "john_doe",
            "minLength": 3,
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario (mínimo 6 caracteres)",
            "example": "Password123!",
            "minLength": 6
          },
          "email": {
            "type": "string",
            "description": "Dirección de email válida del usuario",
            "example": "john@example.com",
            "format": "email"
          },
          "roleId": {
            "type": "string",
            "description": "ID del rol del usuario en el sistema (UUID). Si no se especifica, se asigna rol USER por defecto",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "username",
          "password",
          "email"
        ]
      },
      "RegisterResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Usuario creado exitosamente"
          },
          "user": {
            "description": "Información del usuario creado",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfileDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "user"
        ]
      },
      "ConflictResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Conflict error message"
          },
          "error": {
            "type": "string",
            "description": "Error type"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "UserProfileResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único del usuario",
            "example": "b8c4e4b2-1234-5678-9abc-def123456789"
          },
          "username": {
            "type": "string",
            "description": "Nombre de usuario único",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "description": "Dirección de email del usuario",
            "example": "john@example.com"
          },
          "role": {
            "type": "string",
            "description": "Rol del usuario en el sistema",
            "example": "user",
            "enum": [
              "admin",
              "user"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación del usuario",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización del usuario",
            "example": "2024-01-02T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Nombre de usuario único para el sistema",
            "example": "john_doe",
            "minLength": 3,
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario (mínimo 6 caracteres)",
            "example": "Password123!",
            "minLength": 6
          },
          "email": {
            "type": "string",
            "description": "Dirección de email válida del usuario",
            "example": "john@example.com",
            "format": "email"
          },
          "roleId": {
            "type": "string",
            "description": "ID del rol del usuario en el sistema (UUID). Si no se especifica, se asigna rol USER por defecto",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "username",
          "password",
          "email"
        ]
      },
      "ForbiddenResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Forbidden error message"
          },
          "error": {
            "type": "string",
            "description": "Error type"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único del usuario",
            "example": "b8c4e4b2-1234-5678-9abc-def123456789"
          },
          "username": {
            "type": "string",
            "description": "Nombre de usuario único",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "description": "Dirección de email del usuario",
            "example": "john@example.com"
          },
          "role": {
            "type": "string",
            "description": "Rol del usuario en el sistema",
            "enum": [
              "admin",
              "user"
            ],
            "example": "user"
          },
          "roleId": {
            "type": "string",
            "description": "ID del rol personalizado asignado al usuario",
            "example": "role-uuid-123"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación del usuario",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización del usuario",
            "example": "2024-01-02T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "role",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Lista de usuarios",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseDto"
            }
          },
          "meta": {
            "type": "object",
            "description": "Información de paginación",
            "example": {
              "total": 25,
              "page": 1,
              "limit": 10,
              "totalPages": 3,
              "hasNext": true,
              "hasPrev": false
            }
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "UserExactSearchDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "searchField": {
            "type": "string",
            "description": "Field to search exactly in",
            "example": "email",
            "enum": [
              "email",
              "firstName",
              "lastName"
            ]
          },
          "searchValue": {
            "type": "string",
            "description": "Exact value to search for",
            "example": "admin@bookstore.com"
          }
        },
        "required": [
          "searchField",
          "searchValue"
        ]
      },
      "UserSimpleFilterDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "term": {
            "type": "string",
            "description": "Search term to filter across multiple fields (email, firstName, lastName)",
            "example": "john"
          }
        }
      },
      "NotFoundResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Not found error message"
          },
          "error": {
            "type": "string",
            "description": "Error type"
          }
        },
        "required": [
          "statusCode",
          "message",
          "error"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "CreateBookGenreDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the book genre",
            "example": "Science Fiction",
            "minLength": 2,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the book genre",
            "example": "Fiction that deals with futuristic concepts, advanced science and technology, space exploration, time travel, parallel universes, and extraterrestrial life."
          }
        },
        "required": [
          "name"
        ]
      },
      "BookGenreExactSearchDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "searchField": {
            "type": "string",
            "description": "Field to search exactly in",
            "example": "name",
            "enum": [
              "name"
            ]
          },
          "searchValue": {
            "type": "string",
            "description": "Exact value to search for",
            "example": "Fiction"
          }
        },
        "required": [
          "searchField",
          "searchValue"
        ]
      },
      "BookGenreSimpleFilterDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "term": {
            "type": "string",
            "description": "Search term to filter across multiple fields (name, description)",
            "example": "fiction"
          }
        }
      },
      "UpdateBookGenreDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the book genre",
            "example": "Science Fiction",
            "minLength": 2,
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the book genre",
            "example": "Fiction that deals with futuristic concepts, advanced science and technology, space exploration, time travel, parallel universes, and extraterrestrial life."
          }
        }
      },
      "CreatePublishingHouseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the publishing house",
            "example": "Penguin Random House",
            "minLength": 2,
            "maxLength": 100
          },
          "country": {
            "type": "string",
            "description": "Country where the publishing house is located",
            "example": "United States",
            "minLength": 2,
            "maxLength": 50
          },
          "websiteUrl": {
            "type": "string",
            "description": "Official website URL of the publishing house",
            "example": "https://www.penguinrandomhouse.com",
            "format": "url"
          }
        },
        "required": [
          "name"
        ]
      },
      "PublishingHouseResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único de la editorial",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "name": {
            "type": "string",
            "description": "Nombre de la editorial",
            "example": "Penguin Random House"
          },
          "country": {
            "type": "string",
            "description": "País donde se ubica la editorial",
            "example": "Estados Unidos"
          },
          "websiteUrl": {
            "type": "string",
            "description": "URL del sitio web oficial de la editorial",
            "example": "https://www.penguinrandomhouse.com"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación del registro",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización del registro",
            "example": "2024-01-02T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreatePublishingHouseResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Editorial creada exitosamente"
          },
          "publisher": {
            "description": "Información de la editorial creada",
            "allOf": [
              {
                "$ref": "#/components/schemas/PublishingHouseResponseDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "publisher"
        ]
      },
      "PublishingHouseListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Lista de editoriales",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublishingHouseResponseDto"
            }
          },
          "meta": {
            "type": "object",
            "description": "Información de paginación",
            "example": {
              "total": 45,
              "page": 1,
              "limit": 10,
              "totalPages": 5,
              "hasNext": true,
              "hasPrev": false
            }
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "PublishingHouseExactSearchDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "searchField": {
            "type": "string",
            "description": "Field to search exactly in",
            "example": "name",
            "enum": [
              "name",
              "country"
            ]
          },
          "searchValue": {
            "type": "string",
            "description": "Exact value to search for",
            "example": "Penguin Random House"
          }
        },
        "required": [
          "searchField",
          "searchValue"
        ]
      },
      "PublishingHouseFiltersDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Filter by publishing house name",
            "example": "Penguin"
          },
          "country": {
            "type": "string",
            "description": "Filter by country",
            "example": "United States"
          },
          "websiteUrl": {
            "type": "string",
            "description": "Filter by website URL",
            "example": "penguin.com"
          },
          "createdAfter": {
            "type": "string",
            "description": "Filter publishing houses created after this date",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "createdBefore": {
            "type": "string",
            "description": "Filter publishing houses created before this date",
            "format": "date-time",
            "example": "2024-12-31T23:59:59Z"
          },
          "updatedAfter": {
            "type": "string",
            "description": "Filter publishing houses updated after this date",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "updatedBefore": {
            "type": "string",
            "description": "Filter publishing houses updated before this date",
            "format": "date-time",
            "example": "2024-12-31T23:59:59Z"
          }
        }
      },
      "UpdatePublishingHouseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the publishing house",
            "example": "Penguin Random House",
            "minLength": 2,
            "maxLength": 100
          },
          "country": {
            "type": "string",
            "description": "Country where the publishing house is located",
            "example": "United States",
            "minLength": 2,
            "maxLength": 50
          },
          "websiteUrl": {
            "type": "string",
            "description": "Official website URL of the publishing house",
            "example": "https://www.penguinrandomhouse.com",
            "format": "url"
          }
        }
      },
      "UpdatePublishingHouseResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Editorial actualizada exitosamente"
          },
          "publisher": {
            "description": "Información de la editorial actualizada",
            "allOf": [
              {
                "$ref": "#/components/schemas/PublishingHouseResponseDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "publisher"
        ]
      },
      "DeletePublishingHouseResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Editorial eliminada exitosamente"
          },
          "deletedPublisherId": {
            "type": "string",
            "description": "ID de la editorial eliminada",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "message",
          "deletedPublisherId"
        ]
      },
      "CreateBookAuthorDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of the author",
            "example": "Stephen",
            "minLength": 1,
            "maxLength": 50
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the author",
            "example": "King",
            "minLength": 1,
            "maxLength": 50
          },
          "nationality": {
            "type": "string",
            "description": "Nationality of the author",
            "example": "American",
            "minLength": 2,
            "maxLength": 50
          },
          "birthDate": {
            "format": "date",
            "type": "string",
            "description": "Birth date of the author",
            "example": "1947-10-21"
          },
          "biography": {
            "type": "string",
            "description": "Biography or description of the author",
            "example": "Stephen Edwin King is an American author of horror, supernatural fiction, suspense, crime, science-fiction, and fantasy novels."
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "BookAuthorResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único del autor",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "firstName": {
            "type": "string",
            "description": "Nombre del autor",
            "example": "Stephen"
          },
          "lastName": {
            "type": "string",
            "description": "Apellido del autor",
            "example": "King"
          },
          "nationality": {
            "type": "string",
            "description": "Nacionalidad del autor",
            "example": "Estadounidense"
          },
          "birthDate": {
            "format": "date",
            "type": "string",
            "description": "Birth date of the author",
            "example": "1947-10-21"
          },
          "biography": {
            "type": "string",
            "description": "Biografía del autor",
            "example": "Stephen Edwin King es un escritor estadounidense de novelas de terror, ficción sobrenatural, suspenso, ciencia ficción y fantasía."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación del registro",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización del registro",
            "example": "2024-01-02T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateBookAuthorResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Autor creado exitosamente"
          },
          "author": {
            "description": "Información del autor creado",
            "allOf": [
              {
                "$ref": "#/components/schemas/BookAuthorResponseDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "author"
        ]
      },
      "BookAuthorListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Lista de autores",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookAuthorResponseDto"
            }
          },
          "meta": {
            "type": "object",
            "description": "Información de paginación",
            "example": {
              "total": 75,
              "page": 1,
              "limit": 10,
              "totalPages": 8,
              "hasNext": true,
              "hasPrev": false
            }
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "BookAuthorExactSearchDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "searchField": {
            "type": "string",
            "description": "Field to search exactly in",
            "example": "firstName",
            "enum": [
              "firstName",
              "lastName",
              "nationality"
            ]
          },
          "searchValue": {
            "type": "string",
            "description": "Exact value to search for",
            "example": "Gabriel"
          }
        },
        "required": [
          "searchField",
          "searchValue"
        ]
      },
      "BookAuthorFiltersDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Filter by first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Filter by last name",
            "example": "Doe"
          },
          "nationality": {
            "type": "string",
            "description": "Filter by nationality",
            "example": "American"
          },
          "createdAfter": {
            "type": "string",
            "description": "Filter authors created after this date",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "createdBefore": {
            "type": "string",
            "description": "Filter authors created before this date",
            "format": "date-time",
            "example": "2024-12-31T23:59:59Z"
          },
          "email": {
            "type": "string",
            "description": "Filter by email",
            "example": "author@example.com"
          },
          "biography": {
            "type": "string",
            "description": "Filter by biography",
            "example": "Famous writer"
          }
        }
      },
      "UpdateBookAuthorDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of the author",
            "example": "Stephen",
            "minLength": 1,
            "maxLength": 50
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the author",
            "example": "King",
            "minLength": 1,
            "maxLength": 50
          },
          "nationality": {
            "type": "string",
            "description": "Nationality of the author",
            "example": "American",
            "minLength": 2,
            "maxLength": 50
          },
          "birthDate": {
            "format": "date",
            "type": "string",
            "description": "Birth date of the author",
            "example": "1947-10-21"
          },
          "biography": {
            "type": "string",
            "description": "Biography or description of the author",
            "example": "Stephen Edwin King is an American author of horror, supernatural fiction, suspense, crime, science-fiction, and fantasy novels."
          }
        }
      },
      "UpdateBookAuthorResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Autor actualizado exitosamente"
          },
          "author": {
            "description": "Información del autor actualizado",
            "allOf": [
              {
                "$ref": "#/components/schemas/BookAuthorResponseDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "author"
        ]
      },
      "DeleteBookAuthorResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensaje de confirmación",
            "example": "Autor eliminado exitosamente"
          },
          "deletedAuthorId": {
            "type": "string",
            "description": "ID del autor eliminado",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "message",
          "deletedAuthorId"
        ]
      },
      "CreateBookCatalogDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the book",
            "example": "The Shining",
            "minLength": 1,
            "maxLength": 255
          },
          "isbnCode": {
            "type": "string",
            "description": "Unique ISBN code for the book",
            "example": "9780307743657",
            "minLength": 10,
            "maxLength": 13
          },
          "price": {
            "type": "number",
            "description": "Price of the book",
            "example": 19.99,
            "minimum": 0,
            "format": "decimal"
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Indicates if the book is available for purchase",
            "example": true,
            "default": true
          },
          "stockQuantity": {
            "type": "number",
            "description": "Available stock quantity of the book",
            "example": 25,
            "minimum": 0,
            "default": 0
          },
          "coverImageUrl": {
            "type": "string",
            "description": "URL of the book cover image (auto-generated when uploading via /upload-cover endpoint)",
            "example": "/uploads/books/the_shining.cover_image.jpg",
            "readOnly": true
          },
          "publicationDate": {
            "format": "date",
            "type": "string",
            "description": "Date when the book was published",
            "example": "1947-09-21"
          },
          "pageCount": {
            "type": "number",
            "description": "Number of pages in the book",
            "example": 447,
            "minimum": 1
          },
          "summary": {
            "type": "string",
            "description": "Summary or description of the book",
            "example": "A psychological horror novel that tells the story of Jack Torrance, an aspiring writer and recovering alcoholic who accepts a position as the off-season caretaker of the isolated historic Overlook Hotel."
          },
          "genreId": {
            "type": "string",
            "description": "Foreign key reference to book genre",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "format": "uuid"
          },
          "publisherId": {
            "type": "string",
            "description": "Foreign key reference to publishing house",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          }
        },
        "required": [
          "title",
          "isbnCode",
          "price",
          "genreId",
          "publisherId"
        ]
      },
      "BookCatalogResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único del libro",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "title": {
            "type": "string",
            "description": "Título del libro",
            "example": "The Shining"
          },
          "isbnCode": {
            "type": "string",
            "description": "Código ISBN único del libro",
            "example": "9780307743657"
          },
          "price": {
            "type": "number",
            "description": "Precio del libro",
            "example": 19.99
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Indica si el libro está disponible para compra",
            "example": true
          },
          "stockQuantity": {
            "type": "number",
            "description": "Cantidad disponible en stock",
            "example": 25
          },
          "coverImageUrl": {
            "type": "string",
            "description": "URL de la imagen de portada del libro",
            "example": "https://example.com/covers/the-shining.jpg"
          },
          "publicationDate": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de publicación del libro",
            "example": "1977-01-28T00:00:00.000Z"
          },
          "pageCount": {
            "type": "number",
            "description": "Número de páginas del libro",
            "example": 447
          },
          "summary": {
            "type": "string",
            "description": "Resumen o descripción del libro",
            "example": "Una novela de terror psicológico que cuenta la historia de Jack Torrance..."
          },
          "genreId": {
            "type": "string",
            "description": "ID del género del libro",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "publisherId": {
            "type": "string",
            "description": "ID de la editorial",
            "example": "550e8400-e29b-41d4-a716-446655440002"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de creación del registro",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de última actualización del registro",
            "example": "2024-01-02T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "title",
          "isbnCode",
          "price",
          "isAvailable",
          "stockQuantity",
          "genreId",
          "publisherId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CsvExportFiltersDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Search term for book title",
            "example": "Harry Potter"
          },
          "genreId": {
            "type": "string",
            "description": "Filter by genre ID",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "format": "uuid"
          },
          "publisherId": {
            "type": "string",
            "description": "Filter by publisher ID",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Filter by availability status",
            "example": true
          },
          "minPrice": {
            "type": "number",
            "description": "Minimum price filter",
            "example": 10,
            "minimum": 0
          },
          "maxPrice": {
            "type": "number",
            "description": "Maximum price filter",
            "example": 50,
            "minimum": 0
          },
          "author": {
            "type": "string",
            "description": "Search term for author name",
            "example": "J.K. Rowling"
          },
          "publicationDateFrom": {
            "type": "string",
            "description": "Start date for publication date range filter",
            "example": "2020-01-01",
            "format": "date"
          },
          "publicationDateTo": {
            "type": "string",
            "description": "End date for publication date range filter",
            "example": "2023-12-31",
            "format": "date"
          },
          "createdDateFrom": {
            "type": "string",
            "description": "Start date for creation date range filter",
            "example": "2023-01-01",
            "format": "date"
          },
          "createdDateTo": {
            "type": "string",
            "description": "End date for creation date range filter",
            "example": "2023-12-31",
            "format": "date"
          }
        }
      },
      "UpdateBookCatalogDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the book",
            "example": "The Shining",
            "minLength": 1,
            "maxLength": 255
          },
          "isbnCode": {
            "type": "string",
            "description": "Unique ISBN code for the book",
            "example": "9780307743657",
            "minLength": 10,
            "maxLength": 13
          },
          "price": {
            "type": "number",
            "description": "Price of the book",
            "example": 19.99,
            "minimum": 0,
            "format": "decimal"
          },
          "isAvailable": {
            "type": "boolean",
            "description": "Indicates if the book is available for purchase",
            "example": true,
            "default": true
          },
          "stockQuantity": {
            "type": "number",
            "description": "Available stock quantity of the book",
            "example": 25,
            "minimum": 0,
            "default": 0
          },
          "coverImageUrl": {
            "type": "string",
            "description": "URL of the book cover image (auto-generated when uploading via /upload-cover endpoint)",
            "example": "/uploads/books/the_shining.cover_image.jpg",
            "readOnly": true
          },
          "publicationDate": {
            "format": "date",
            "type": "string",
            "description": "Date when the book was published",
            "example": "1947-09-21"
          },
          "pageCount": {
            "type": "number",
            "description": "Number of pages in the book",
            "example": 447,
            "minimum": 1
          },
          "summary": {
            "type": "string",
            "description": "Summary or description of the book",
            "example": "A psychological horror novel that tells the story of Jack Torrance, an aspiring writer and recovering alcoholic who accepts a position as the off-season caretaker of the isolated historic Overlook Hotel."
          },
          "genreId": {
            "type": "string",
            "description": "Foreign key reference to book genre",
            "example": "550e8400-e29b-41d4-a716-446655440000",
            "format": "uuid"
          },
          "publisherId": {
            "type": "string",
            "description": "Foreign key reference to publishing house",
            "example": "550e8400-e29b-41d4-a716-446655440001",
            "format": "uuid"
          }
        }
      },
      "UploadBookCoverDto": {
        "type": "object",
        "properties": {
          "coverImage": {
            "type": "string",
            "format": "binary",
            "description": "Book cover image file (JPEG, PNG, WebP, GIF - max 5MB)",
            "example": "cover-image.jpg"
          }
        },
        "required": [
          "coverImage"
        ]
      },
      "MovementFiltersDto": {
        "type": "object",
        "properties": {
          "movementType": {
            "type": "string",
            "description": "Filtrar por tipo de movimiento específico",
            "enum": [
              "PURCHASE",
              "SALE",
              "DISCOUNT",
              "INCREASE",
              "OUT_OF_STOCK",
              "ARCHIVED"
            ],
            "example": "PURCHASE"
          },
          "status": {
            "type": "string",
            "description": "Filtrar por estado del movimiento",
            "enum": [
              "PENDING",
              "COMPLETED",
              "ERROR"
            ],
            "example": "COMPLETED"
          },
          "entityType": {
            "type": "string",
            "description": "Filtrar por tipo de entidad (ej: book)",
            "example": "book",
            "maxLength": 50
          },
          "entityId": {
            "type": "string",
            "description": "Filtrar por ID específico de entidad",
            "example": "456e7890-e89b-12d3-a456-426614174001",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "description": "Filtrar por ID de usuario específico (solo ADMIN puede usar otros IDs)",
            "example": "789e1234-e89b-12d3-a456-426614174002",
            "format": "uuid"
          },
          "userRole": {
            "type": "string",
            "description": "Filtrar por rol de usuario",
            "example": "admin",
            "maxLength": 50
          },
          "startDate": {
            "type": "string",
            "description": "Fecha de inicio para filtro de rango de fechas (YYYY-MM-DD)",
            "example": "2024-01-01",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Fecha de fin para filtro de rango de fechas (YYYY-MM-DD)",
            "example": "2024-12-31",
            "format": "date"
          },
          "isActive": {
            "type": "boolean",
            "description": "Filtrar solo movimientos activos (true) o inactivos (false)",
            "example": true,
            "default": true
          },
          "notes": {
            "type": "string",
            "description": "Filtrar por notas o descripción",
            "example": "Actualización completada exitosamente"
          }
        }
      },
      "MovementSearchDto": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "description": "Término de búsqueda para buscar en notas, nombre de usuario, tipo de entidad",
            "example": "libro actualizado",
            "minLength": 2,
            "maxLength": 100
          },
          "userFullName": {
            "type": "string",
            "description": "Buscar por nombre completo de usuario",
            "example": "Juan Pérez",
            "maxLength": 100
          },
          "notes": {
            "type": "string",
            "description": "Buscar en notas del movimiento",
            "example": "venta exitosa",
            "minLength": 2,
            "maxLength": 200
          }
        }
      },
      "MovementAdvancedFiltersDto": {
        "type": "object",
        "properties": {
          "minPriceBefore": {
            "type": "number",
            "description": "Precio mínimo antes del cambio",
            "example": 10000,
            "minimum": 0,
            "format": "decimal"
          },
          "maxPriceBefore": {
            "type": "number",
            "description": "Precio máximo antes del cambio",
            "example": 100000,
            "minimum": 0,
            "format": "decimal"
          },
          "minPriceAfter": {
            "type": "number",
            "description": "Precio mínimo después del cambio",
            "example": 15000,
            "minimum": 0,
            "format": "decimal"
          },
          "maxPriceAfter": {
            "type": "number",
            "description": "Precio máximo después del cambio",
            "example": 150000,
            "minimum": 0,
            "format": "decimal"
          },
          "minQuantityBefore": {
            "type": "number",
            "description": "Cantidad mínima antes del cambio",
            "example": 0,
            "minimum": 0,
            "maximum": 99999
          },
          "maxQuantityBefore": {
            "type": "number",
            "description": "Cantidad máxima antes del cambio",
            "example": 1000,
            "minimum": 0,
            "maximum": 99999
          },
          "minQuantityAfter": {
            "type": "number",
            "description": "Cantidad mínima después del cambio",
            "example": 0,
            "minimum": 0,
            "maximum": 99999
          },
          "maxQuantityAfter": {
            "type": "number",
            "description": "Cantidad máxima después del cambio",
            "example": 500,
            "minimum": 0,
            "maximum": 99999
          },
          "createdAfter": {
            "type": "string",
            "description": "Fecha de creación después de (YYYY-MM-DD)",
            "example": "2024-01-01",
            "format": "date"
          },
          "createdBefore": {
            "type": "string",
            "description": "Fecha de creación antes de (YYYY-MM-DD)",
            "example": "2024-12-31",
            "format": "date"
          },
          "movementType": {
            "type": "string",
            "description": "Filtrar por tipo de movimiento específico",
            "enum": [
              "PURCHASE",
              "SALE",
              "DISCOUNT",
              "INCREASE",
              "OUT_OF_STOCK",
              "ARCHIVED"
            ],
            "example": "PURCHASE"
          },
          "entityType": {
            "type": "string",
            "description": "Filtrar por tipo de entidad (ej: book)",
            "example": "book"
          },
          "notes": {
            "type": "string",
            "description": "Filtrar por notas o descripción",
            "example": "Actualización completada exitosamente"
          }
        }
      },
      "CreateBookAuthorAssignmentDto": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "ID of the book being assigned",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "authorId": {
            "type": "string",
            "description": "ID of the author being assigned",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "authorRole": {
            "type": "string",
            "description": "Role of the author in this book (e.g., \"Main Author\", \"Co-Author\")",
            "example": "Main Author",
            "maxLength": 100
          }
        },
        "required": [
          "bookId",
          "authorId"
        ]
      },
      "AssignmentExactSearchDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 10
          },
          "sortBy": {
            "type": "string",
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "default": "DESC"
          },
          "offset": {
            "type": "number"
          },
          "searchField": {
            "type": "string",
            "description": "Field to search exactly in",
            "example": "bookId",
            "enum": [
              "bookId",
              "authorId"
            ]
          },
          "searchValue": {
            "type": "string",
            "description": "Exact value to search for",
            "example": "book-123"
          }
        },
        "required": [
          "searchField",
          "searchValue"
        ]
      },
      "AssignmentFiltersDto": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "Filter by book ID",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "authorId": {
            "type": "string",
            "description": "Filter by author ID",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          },
          "createdAfter": {
            "type": "string",
            "description": "Filter assignments created after this date",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "createdBefore": {
            "type": "string",
            "description": "Filter assignments created before this date",
            "format": "date-time",
            "example": "2024-12-31T23:59:59Z"
          }
        }
      },
      "UpdateBookAuthorAssignmentDto": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "string",
            "description": "ID of the book being assigned",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "authorId": {
            "type": "string",
            "description": "ID of the author being assigned",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "authorRole": {
            "type": "string",
            "description": "Role of the author in this book (e.g., \"Main Author\", \"Co-Author\")",
            "example": "Main Author",
            "maxLength": 100
          }
        }
      }
    }
  }
}